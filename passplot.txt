

########################################################
passplot <- function(df, title) {
#  if(!is.factor(df[,5])) lane <- factor(df[,5])
  df <- dplyr::as_tibble(df)
  ggplot2::ggplot(df, ggplot2::aes_string("y", "x")) +
  ggplot2::geom_point(ggplot2::aes_string(size = "u", color = "u")) +
  ggplot2::geom_point(ggplot2::aes_string(shape = "lane")) +
  ggplot2::ggtitle(title)
}

> passplot(df, "Merge")
   Error in as.data.frame.default(value, stringsAsFactors = FALSE, ...) : 
     cannot coerce class ""function"" to a data.frame
   Calls: passplot ... as_tibble -> as.data.frame -> as.data.frame.default
   Execution halted

> class(df)
[1] "data.frame"
> 

############################################################
passplot <- function(df, title) {
#  if(!is.factor(df[,5])) lane <- factor(df[,5])
#  df <- dplyr::as_tibble(df)
  ggplot2::ggplot(df, ggplot2::aes_string("y", "x")) +
  ggplot2::geom_point(ggplot2::aes_string(size = "u", color = "u")) +
  ggplot2::geom_point(ggplot2::aes_string(shape = "lane")) +
  ggplot2::ggtitle(title)
}

> passplot(df, "Merge")
   Error: You're passing a function as global data.
   Have you misspelled the `data` argument in `ggplot()`
   Execution halted


class(df[,5])
[1] "factor"

#########################################################
passplot <- function(df, title) {
#  if(!is.factor(df[,5])) lane <- factor(df[,5])
  df <- dplyr::as_tibble(df)
  ggplot2::ggplot(df, ggplot2::aes_string("y", "x")) +
  ggplot2::geom_point(ggplot2::aes_string(size = "u", color = "u")) +
  ggplot2::geom_point(ggplot2::aes_string(shape = "lane")) +
  ggplot2::ggtitle(title)
}

 > passplot(df, "Merge")
   Error in as.data.frame.default(value, stringsAsFactors = FALSE, ...) : 
     cannot coerce class ""function"" to a data.frame
   Calls: passplot ... as_tibble -> as.data.frame -> as.data.frame.default
   Execution halted

########################################################

> as.data.frame.default(df)
Error in as.data.frame.default(df) : 
  cannot coerce class ""data.frame"" to a data.frame

> is.data.frame.default(df)
Error in is.data.frame.default(df) : 
  could not find function "is.data.frame.default"

> is.data.frame(df)
[1] TRUE
> 